


var screen by remember { mutableIntStateOf(1) }
    val iconColorList = remember{ mutableListOf(false, false, false, false)}
    when(screen) {
        1 -> {
            iconColorList[0] = true
            iconColorList[1] = false
            iconColorList[2] = false
            iconColorList[3] = false//TODO refactor this shit
        }
        2 -> {
            iconColorList[0] = false
            iconColorList[1] = true
            iconColorList[2] = false
            iconColorList[3] = false
        }
        3 -> {
            iconColorList[0] = false
            iconColorList[1] = false
            iconColorList[2] = true
            iconColorList[3] = false
        }
        4 -> {
            iconColorList[0] = false
            iconColorList[1] = false
            iconColorList[2] = false
            iconColorList[3] = true
        }
    }
    Scaffold(
        containerColor = androidx.compose.ui.graphics.Color.Transparent,
        modifier = Modifier.height(45.dp),
        bottomBar = {
            Box(modifier = Modifier.fillMaxWidth()) {
                BottomAppBar(
                    actions = {
                        Row(
                            modifier = Modifier.fillMaxWidth(),
                            horizontalArrangement = Arrangement.SpaceBetween
                        ) {
                            NavigationBarIcon(R.drawable.home_bottombar_icon).MakeNavigationBarIcon(
                                mutableActionChange = { screen = it },
                                1,
                                iconColorList[0]
                            )
                            NavigationBarIcon(R.drawable.search_bottombar_icon).MakeNavigationBarIcon(
                                mutableActionChange = { screen = it },
                                2,
                                iconColorList[1]
                            )
                            NavigationBarIcon(R.drawable.shop_bottombar_icon).MakeNavigationBarIcon(
                                mutableActionChange = { screen = it },
                                3,
                                iconColorList[2]
                            )
                            NavigationBarIcon(R.drawable.profile_bottombar_icon).MakeNavigationBarIcon(
                                mutableActionChange = { screen = it },
                                4,
                                iconColorList[3]
                            )
                        }
                    },
                    modifier = Modifier
                        .height(45.dp)
                        .fillMaxWidth(),
                    containerColor = White10,
                    contentPadding = PaddingValues(0.dp)
                )
            }
        },
        content = {
                padding->
            Box(
                modifier = Modifier
                    .padding(padding)
                    .fillMaxSize(),
                contentAlignment = Alignment.Center
            ){
               when(screen) {
                   1 -> {
                       MainScreen(naviToSearch = {}).LazyColumnMainScreen(productsList = DataSource().loadProducts())
                   }
                   2 -> {
                       SearchScreen().ColumnSearchScreen()
                   }
                   3 -> {
                       BasketScreen().MakeBasketScreen()
                   }
                   4 -> {
                       ProfileScreen().MakeProfileScreen()
                   }
               }
            }
        }
    )